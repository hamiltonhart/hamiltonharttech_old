{"ast":null,"code":"var _jsxFileName = \"/Users/georgehart/Documents/WebDev/MyProjects/hamtiltonharttech/frontend/src/components/Auth/Login.js\";\nimport React, { useState } from \"react\";\nimport { makeStyles, Grid, Container, TextField, Button, FormControl, Typography } from \"@material-ui/core\";\nimport { LOGIN_MUT } from \"../../gql\";\nimport { useMutation, useApolloClient } from \"@apollo/react-hooks\";\nconst useStyles = makeStyles(theme => ({\n  root: {\n    marginTop: theme.spacing(8),\n    padding: theme.spacing(4),\n    boxShadow: theme.shadows[3]\n  },\n  heading: {\n    textTransform: \"uppercase\"\n  }\n}));\nexport const Login = () => {\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [tokenAuth, {\n    error\n  }] = useMutation(LOGIN_MUT);\n  const client = useApolloClient();\n  const classes = useStyles();\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const res = await tokenAuth({\n      variables: {\n        username,\n        password\n      }\n    });\n    localStorage.setItem(\"authToken\", res.data.tokenAuth.token);\n    client.writeData({\n      data: {\n        isLoggedIn: true\n      }\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(Container, {\n    className: classes.root,\n    maxWidth: \"sm\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    component: \"form\",\n    container: true,\n    spacing: 1,\n    direction: \"column\",\n    onSubmit: e => handleSubmit(e),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    className: classes.heading,\n    variant: \"h3\",\n    align: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 11\n    }\n  }, \"Login\")), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(FormControl, {\n    fullWidth: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    label: \"Username\",\n    variant: \"outlined\",\n    onChange: e => setUsername(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }\n  }))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(FormControl, {\n    fullWidth: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    type: \"password\",\n    label: \"Password\",\n    variant: \"outlined\",\n    onChange: e => setPassword(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }\n  }))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    type: \"submit\",\n    color: \"primary\",\n    size: \"large\",\n    variant: \"contained\",\n    fullWidth: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 11\n    }\n  }, \"Login\"))));\n};","map":{"version":3,"sources":["/Users/georgehart/Documents/WebDev/MyProjects/hamtiltonharttech/frontend/src/components/Auth/Login.js"],"names":["React","useState","makeStyles","Grid","Container","TextField","Button","FormControl","Typography","LOGIN_MUT","useMutation","useApolloClient","useStyles","theme","root","marginTop","spacing","padding","boxShadow","shadows","heading","textTransform","Login","username","setUsername","password","setPassword","tokenAuth","error","client","classes","handleSubmit","e","preventDefault","res","variables","localStorage","setItem","data","token","writeData","isLoggedIn","target","value"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AAEA,SACEC,UADF,EAEEC,IAFF,EAGEC,SAHF,EAIEC,SAJF,EAKEC,MALF,EAMEC,WANF,EAOEC,UAPF,QAQO,mBARP;AAUA,SAASC,SAAT,QAA0B,WAA1B;AACA,SAASC,WAAT,EAAsBC,eAAtB,QAA6C,qBAA7C;AAEA,MAAMC,SAAS,GAAGV,UAAU,CAACW,KAAK,KAAK;AACrCC,EAAAA,IAAI,EAAE;AACJC,IAAAA,SAAS,EAAEF,KAAK,CAACG,OAAN,CAAc,CAAd,CADP;AAEJC,IAAAA,OAAO,EAAEJ,KAAK,CAACG,OAAN,CAAc,CAAd,CAFL;AAGJE,IAAAA,SAAS,EAAEL,KAAK,CAACM,OAAN,CAAc,CAAd;AAHP,GAD+B;AAMrCC,EAAAA,OAAO,EAAE;AACPC,IAAAA,aAAa,EAAE;AADR;AAN4B,CAAL,CAAN,CAA5B;AAWA,OAAO,MAAMC,KAAK,GAAG,MAAM;AACzB,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BvB,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACwB,QAAD,EAAWC,WAAX,IAA0BzB,QAAQ,CAAC,EAAD,CAAxC;AAEA,QAAM,CAAC0B,SAAD,EAAY;AAAEC,IAAAA;AAAF,GAAZ,IAAyBlB,WAAW,CAACD,SAAD,CAA1C;AACA,QAAMoB,MAAM,GAAGlB,eAAe,EAA9B;AAEA,QAAMmB,OAAO,GAAGlB,SAAS,EAAzB;;AAEA,QAAMmB,YAAY,GAAG,MAAMC,CAAN,IAAW;AAC9BA,IAAAA,CAAC,CAACC,cAAF;AACA,UAAMC,GAAG,GAAG,MAAMP,SAAS,CAAC;AAAEQ,MAAAA,SAAS,EAAE;AAAEZ,QAAAA,QAAF;AAAYE,QAAAA;AAAZ;AAAb,KAAD,CAA3B;AACAW,IAAAA,YAAY,CAACC,OAAb,CAAqB,WAArB,EAAkCH,GAAG,CAACI,IAAJ,CAASX,SAAT,CAAmBY,KAArD;AACAV,IAAAA,MAAM,CAACW,SAAP,CAAiB;AAAEF,MAAAA,IAAI,EAAE;AAAEG,QAAAA,UAAU,EAAE;AAAd;AAAR,KAAjB;AACD,GALD;;AAOA,sBACE,oBAAC,SAAD;AAAW,IAAA,SAAS,EAAEX,OAAO,CAAChB,IAA9B;AAAoC,IAAA,QAAQ,EAAC,IAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,IAAD;AACE,IAAA,SAAS,EAAC,MADZ;AAEE,IAAA,SAAS,MAFX;AAGE,IAAA,OAAO,EAAE,CAHX;AAIE,IAAA,SAAS,EAAC,QAJZ;AAKE,IAAA,QAAQ,EAAEkB,CAAC,IAAID,YAAY,CAACC,CAAD,CAL7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAOE,oBAAC,IAAD;AAAM,IAAA,IAAI,MAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,UAAD;AAAY,IAAA,SAAS,EAAEF,OAAO,CAACV,OAA/B;AAAwC,IAAA,OAAO,EAAC,IAAhD;AAAqD,IAAA,KAAK,EAAC,QAA3D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADF,CAPF,eAYE,oBAAC,IAAD;AAAM,IAAA,IAAI,MAAV;AAAW,IAAA,EAAE,EAAE,EAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,WAAD;AAAa,IAAA,SAAS,MAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,SAAD;AACE,IAAA,KAAK,EAAC,UADR;AAEE,IAAA,OAAO,EAAC,UAFV;AAGE,IAAA,QAAQ,EAAEY,CAAC,IAAIR,WAAW,CAACQ,CAAC,CAACU,MAAF,CAASC,KAAV,CAH5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,CAZF,eAqBE,oBAAC,IAAD;AAAM,IAAA,IAAI,MAAV;AAAW,IAAA,EAAE,EAAE,EAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,WAAD;AAAa,IAAA,SAAS,MAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,SAAD;AACE,IAAA,IAAI,EAAC,UADP;AAEE,IAAA,KAAK,EAAC,UAFR;AAGE,IAAA,OAAO,EAAC,UAHV;AAIE,IAAA,QAAQ,EAAEX,CAAC,IAAIN,WAAW,CAACM,CAAC,CAACU,MAAF,CAASC,KAAV,CAJ5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,CArBF,eA+BE,oBAAC,IAAD;AAAM,IAAA,IAAI,MAAV;AAAW,IAAA,EAAE,EAAE,EAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,MAAD;AACE,IAAA,IAAI,EAAC,QADP;AAEE,IAAA,KAAK,EAAC,SAFR;AAGE,IAAA,IAAI,EAAC,OAHP;AAIE,IAAA,OAAO,EAAC,WAJV;AAKE,IAAA,SAAS,MALX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADF,CA/BF,CADF,CADF;AA+CD,CA/DM","sourcesContent":["import React, { useState } from \"react\";\n\nimport {\n  makeStyles,\n  Grid,\n  Container,\n  TextField,\n  Button,\n  FormControl,\n  Typography\n} from \"@material-ui/core\";\n\nimport { LOGIN_MUT } from \"../../gql\";\nimport { useMutation, useApolloClient } from \"@apollo/react-hooks\";\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    marginTop: theme.spacing(8),\n    padding: theme.spacing(4),\n    boxShadow: theme.shadows[3]\n  },\n  heading: {\n    textTransform: \"uppercase\"\n  }\n}));\n\nexport const Login = () => {\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n\n  const [tokenAuth, { error }] = useMutation(LOGIN_MUT);\n  const client = useApolloClient();\n\n  const classes = useStyles();\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const res = await tokenAuth({ variables: { username, password } });\n    localStorage.setItem(\"authToken\", res.data.tokenAuth.token);\n    client.writeData({ data: { isLoggedIn: true } });\n  };\n\n  return (\n    <Container className={classes.root} maxWidth=\"sm\">\n      <Grid\n        component=\"form\"\n        container\n        spacing={1}\n        direction=\"column\"\n        onSubmit={e => handleSubmit(e)}\n      >\n        <Grid item>\n          <Typography className={classes.heading} variant=\"h3\" align=\"center\">\n            Login\n          </Typography>\n        </Grid>\n        <Grid item xs={12}>\n          <FormControl fullWidth>\n            <TextField\n              label=\"Username\"\n              variant=\"outlined\"\n              onChange={e => setUsername(e.target.value)}\n            />\n          </FormControl>\n        </Grid>\n        <Grid item xs={12}>\n          <FormControl fullWidth>\n            <TextField\n              type=\"password\"\n              label=\"Password\"\n              variant=\"outlined\"\n              onChange={e => setPassword(e.target.value)}\n            />\n          </FormControl>\n        </Grid>\n        <Grid item xs={12}>\n          <Button\n            type=\"submit\"\n            color=\"primary\"\n            size=\"large\"\n            variant=\"contained\"\n            fullWidth\n          >\n            Login\n          </Button>\n        </Grid>\n      </Grid>\n    </Container>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}