{"ast":null,"code":"import _regeneratorRuntime from\"/Users/georgehart/Documents/WebDev/MyProjects/hamtiltonharttech/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Users/georgehart/Documents/WebDev/MyProjects/hamtiltonharttech/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"/Users/georgehart/Documents/WebDev/MyProjects/hamtiltonharttech/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState}from\"react\";import{makeStyles,Grid,Container,TextField,Button,FormControl,Typography}from\"@material-ui/core\";import{LOGIN_MUT}from\"../../gql\";import{useMutation,useApolloClient}from\"@apollo/react-hooks\";var useStyles=makeStyles(function(theme){return{root:{marginTop:theme.spacing(8),padding:theme.spacing(4),boxShadow:theme.shadows[3]},heading:{textTransform:\"uppercase\"}};});export var Login=function Login(){var _useState=useState(\"\"),_useState2=_slicedToArray(_useState,2),username=_useState2[0],setUsername=_useState2[1];var _useState3=useState(\"\"),_useState4=_slicedToArray(_useState3,2),password=_useState4[0],setPassword=_useState4[1];var _useMutation=useMutation(LOGIN_MUT),_useMutation2=_slicedToArray(_useMutation,2),tokenAuth=_useMutation2[0],error=_useMutation2[1].error;var client=useApolloClient();var classes=useStyles();var handleSubmit=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(e){var res;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:e.preventDefault();_context.next=3;return tokenAuth({variables:{username:username,password:password}});case 3:res=_context.sent;localStorage.setItem(\"authToken\",res.data.tokenAuth.token);client.writeData({data:{isLoggedIn:true}});case 6:case\"end\":return _context.stop();}}},_callee);}));return function handleSubmit(_x){return _ref.apply(this,arguments);};}();return/*#__PURE__*/React.createElement(Container,{className:classes.root,maxWidth:\"sm\"},/*#__PURE__*/React.createElement(Grid,{component:\"form\",container:true,spacing:1,direction:\"column\",onSubmit:function onSubmit(e){return handleSubmit(e);}},/*#__PURE__*/React.createElement(Grid,{item:true},/*#__PURE__*/React.createElement(Typography,{className:classes.heading,variant:\"h3\",align:\"center\",gutterBottom:true},\"Login\")),/*#__PURE__*/React.createElement(Grid,{item:true,xs:12},/*#__PURE__*/React.createElement(FormControl,{fullWidth:true},/*#__PURE__*/React.createElement(TextField,{label:\"Username\",variant:\"outlined\",onChange:function onChange(e){return setUsername(e.target.value);}}))),/*#__PURE__*/React.createElement(Grid,{item:true,xs:12},/*#__PURE__*/React.createElement(FormControl,{fullWidth:true},/*#__PURE__*/React.createElement(TextField,{type:\"password\",label:\"Password\",variant:\"outlined\",onChange:function onChange(e){return setPassword(e.target.value);}}))),/*#__PURE__*/React.createElement(Grid,{item:true,xs:12},/*#__PURE__*/React.createElement(Button,{type:\"submit\",color:\"primary\",size:\"large\",variant:\"contained\",fullWidth:true},\"Login\"))));};","map":{"version":3,"sources":["/Users/georgehart/Documents/WebDev/MyProjects/hamtiltonharttech/frontend/src/components/Auth/Login.js"],"names":["React","useState","makeStyles","Grid","Container","TextField","Button","FormControl","Typography","LOGIN_MUT","useMutation","useApolloClient","useStyles","theme","root","marginTop","spacing","padding","boxShadow","shadows","heading","textTransform","Login","username","setUsername","password","setPassword","tokenAuth","error","client","classes","handleSubmit","e","preventDefault","variables","res","localStorage","setItem","data","token","writeData","isLoggedIn","target","value"],"mappings":"0jBAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,KAAgC,OAAhC,CAEA,OACEC,UADF,CAEEC,IAFF,CAGEC,SAHF,CAIEC,SAJF,CAKEC,MALF,CAMEC,WANF,CAOEC,UAPF,KAQO,mBARP,CAUA,OAASC,SAAT,KAA0B,WAA1B,CACA,OAASC,WAAT,CAAsBC,eAAtB,KAA6C,qBAA7C,CAEA,GAAMC,CAAAA,SAAS,CAAGV,UAAU,CAAC,SAAAW,KAAK,QAAK,CACrCC,IAAI,CAAE,CACJC,SAAS,CAAEF,KAAK,CAACG,OAAN,CAAc,CAAd,CADP,CAEJC,OAAO,CAAEJ,KAAK,CAACG,OAAN,CAAc,CAAd,CAFL,CAGJE,SAAS,CAAEL,KAAK,CAACM,OAAN,CAAc,CAAd,CAHP,CAD+B,CAMrCC,OAAO,CAAE,CACPC,aAAa,CAAE,WADR,CAN4B,CAAL,EAAN,CAA5B,CAWA,MAAO,IAAMC,CAAAA,KAAK,CAAG,QAARA,CAAAA,KAAQ,EAAM,eACOrB,QAAQ,CAAC,EAAD,CADf,wCAClBsB,QADkB,eACRC,WADQ,8BAEOvB,QAAQ,CAAC,EAAD,CAFf,yCAElBwB,QAFkB,eAERC,WAFQ,gCAIMhB,WAAW,CAACD,SAAD,CAJjB,8CAIlBkB,SAJkB,kBAILC,KAJK,kBAILA,KAJK,CAKzB,GAAMC,CAAAA,MAAM,CAAGlB,eAAe,EAA9B,CAEA,GAAMmB,CAAAA,OAAO,CAAGlB,SAAS,EAAzB,CAEA,GAAMmB,CAAAA,YAAY,0FAAG,iBAAMC,CAAN,0HACnBA,CAAC,CAACC,cAAF,GADmB,sBAEDN,CAAAA,SAAS,CAAC,CAAEO,SAAS,CAAE,CAAEX,QAAQ,CAARA,QAAF,CAAYE,QAAQ,CAARA,QAAZ,CAAb,CAAD,CAFR,QAEbU,GAFa,eAGnBC,YAAY,CAACC,OAAb,CAAqB,WAArB,CAAkCF,GAAG,CAACG,IAAJ,CAASX,SAAT,CAAmBY,KAArD,EACAV,MAAM,CAACW,SAAP,CAAiB,CAAEF,IAAI,CAAE,CAAEG,UAAU,CAAE,IAAd,CAAR,CAAjB,EAJmB,sDAAH,kBAAZV,CAAAA,YAAY,4CAAlB,CAOA,mBACE,oBAAC,SAAD,EAAW,SAAS,CAAED,OAAO,CAAChB,IAA9B,CAAoC,QAAQ,CAAC,IAA7C,eACE,oBAAC,IAAD,EACE,SAAS,CAAC,MADZ,CAEE,SAAS,KAFX,CAGE,OAAO,CAAE,CAHX,CAIE,SAAS,CAAC,QAJZ,CAKE,QAAQ,CAAE,kBAAAkB,CAAC,QAAID,CAAAA,YAAY,CAACC,CAAD,CAAhB,EALb,eAOE,oBAAC,IAAD,EAAM,IAAI,KAAV,eACE,oBAAC,UAAD,EACE,SAAS,CAAEF,OAAO,CAACV,OADrB,CAEE,OAAO,CAAC,IAFV,CAGE,KAAK,CAAC,QAHR,CAIE,YAAY,KAJd,UADF,CAPF,cAiBE,oBAAC,IAAD,EAAM,IAAI,KAAV,CAAW,EAAE,CAAE,EAAf,eACE,oBAAC,WAAD,EAAa,SAAS,KAAtB,eACE,oBAAC,SAAD,EACE,KAAK,CAAC,UADR,CAEE,OAAO,CAAC,UAFV,CAGE,QAAQ,CAAE,kBAAAY,CAAC,QAAIR,CAAAA,WAAW,CAACQ,CAAC,CAACU,MAAF,CAASC,KAAV,CAAf,EAHb,EADF,CADF,CAjBF,cA0BE,oBAAC,IAAD,EAAM,IAAI,KAAV,CAAW,EAAE,CAAE,EAAf,eACE,oBAAC,WAAD,EAAa,SAAS,KAAtB,eACE,oBAAC,SAAD,EACE,IAAI,CAAC,UADP,CAEE,KAAK,CAAC,UAFR,CAGE,OAAO,CAAC,UAHV,CAIE,QAAQ,CAAE,kBAAAX,CAAC,QAAIN,CAAAA,WAAW,CAACM,CAAC,CAACU,MAAF,CAASC,KAAV,CAAf,EAJb,EADF,CADF,CA1BF,cAoCE,oBAAC,IAAD,EAAM,IAAI,KAAV,CAAW,EAAE,CAAE,EAAf,eACE,oBAAC,MAAD,EACE,IAAI,CAAC,QADP,CAEE,KAAK,CAAC,SAFR,CAGE,IAAI,CAAC,OAHP,CAIE,OAAO,CAAC,WAJV,CAKE,SAAS,KALX,UADF,CApCF,CADF,CADF,CAoDD,CApEM","sourcesContent":["import React, { useState } from \"react\";\n\nimport {\n  makeStyles,\n  Grid,\n  Container,\n  TextField,\n  Button,\n  FormControl,\n  Typography\n} from \"@material-ui/core\";\n\nimport { LOGIN_MUT } from \"../../gql\";\nimport { useMutation, useApolloClient } from \"@apollo/react-hooks\";\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    marginTop: theme.spacing(8),\n    padding: theme.spacing(4),\n    boxShadow: theme.shadows[3]\n  },\n  heading: {\n    textTransform: \"uppercase\"\n  }\n}));\n\nexport const Login = () => {\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n\n  const [tokenAuth, { error }] = useMutation(LOGIN_MUT);\n  const client = useApolloClient();\n\n  const classes = useStyles();\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const res = await tokenAuth({ variables: { username, password } });\n    localStorage.setItem(\"authToken\", res.data.tokenAuth.token);\n    client.writeData({ data: { isLoggedIn: true } });\n  };\n\n  return (\n    <Container className={classes.root} maxWidth=\"sm\">\n      <Grid\n        component=\"form\"\n        container\n        spacing={1}\n        direction=\"column\"\n        onSubmit={e => handleSubmit(e)}\n      >\n        <Grid item>\n          <Typography\n            className={classes.heading}\n            variant=\"h3\"\n            align=\"center\"\n            gutterBottom\n          >\n            Login\n          </Typography>\n        </Grid>\n        <Grid item xs={12}>\n          <FormControl fullWidth>\n            <TextField\n              label=\"Username\"\n              variant=\"outlined\"\n              onChange={e => setUsername(e.target.value)}\n            />\n          </FormControl>\n        </Grid>\n        <Grid item xs={12}>\n          <FormControl fullWidth>\n            <TextField\n              type=\"password\"\n              label=\"Password\"\n              variant=\"outlined\"\n              onChange={e => setPassword(e.target.value)}\n            />\n          </FormControl>\n        </Grid>\n        <Grid item xs={12}>\n          <Button\n            type=\"submit\"\n            color=\"primary\"\n            size=\"large\"\n            variant=\"contained\"\n            fullWidth\n          >\n            Login\n          </Button>\n        </Grid>\n      </Grid>\n    </Container>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}