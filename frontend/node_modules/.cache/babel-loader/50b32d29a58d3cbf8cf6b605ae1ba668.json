{"ast":null,"code":"var _jsxFileName = \"/Users/georgehart/Documents/WebDev/MyProjects/hamtiltonharttech/frontend/src/index.js\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { ThemeProvider } from \"@material-ui/core/styles\";\nimport theme from \"./styling/theme\";\nimport { ApolloProvider } from \"react-apollo\";\nimport ApolloClient, { gql } from \"apollo-boost\";\nimport { InMemoryCache } from \"apollo-cache-inmemory\";\nconst cache = new InMemoryCache();\nconst client = new ApolloClient({\n  cache,\n  uri: \"http://127.0.0.1:8000/graphql/\",\n  fetchOptions: {\n    credentials: \"include\"\n  },\n  request: operation => {\n    const token = localStorage.getItem(\"authToken\") || \"\";\n    operation.setContext({\n      headers: {\n        Authorization: `JWT ${token}`\n      }\n    });\n  },\n  clientState: {\n    defaults: {\n      isLoggedIn: !!localStorage.getItem(\"authToken\")\n    }\n  }\n});\nconst IS_LOGGED_IN = gql`\n  {\n    isLoggedIn @client\n  }\n`;\nReactDOM.render( /*#__PURE__*/React.createElement(ApolloProvider, {\n  client: client,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 3\n  }\n}, /*#__PURE__*/React.createElement(ThemeProvider, {\n  theme: theme,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }\n}, /*#__PURE__*/React.createElement(App, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 7\n  }\n}))), document.getElementById(\"root\")); // If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n\nserviceWorker.unregister();","map":{"version":3,"sources":["/Users/georgehart/Documents/WebDev/MyProjects/hamtiltonharttech/frontend/src/index.js"],"names":["React","ReactDOM","App","serviceWorker","ThemeProvider","theme","ApolloProvider","ApolloClient","gql","InMemoryCache","cache","client","uri","fetchOptions","credentials","request","operation","token","localStorage","getItem","setContext","headers","Authorization","clientState","defaults","isLoggedIn","IS_LOGGED_IN","render","document","getElementById","unregister"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAO,aAAP;AACA,OAAOC,GAAP,MAAgB,OAAhB;AACA,OAAO,KAAKC,aAAZ,MAA+B,iBAA/B;AAEA,SAASC,aAAT,QAA8B,0BAA9B;AACA,OAAOC,KAAP,MAAkB,iBAAlB;AAEA,SAASC,cAAT,QAA+B,cAA/B;AACA,OAAOC,YAAP,IAAuBC,GAAvB,QAAkC,cAAlC;AACA,SAASC,aAAT,QAA8B,uBAA9B;AAEA,MAAMC,KAAK,GAAG,IAAID,aAAJ,EAAd;AAEA,MAAME,MAAM,GAAG,IAAIJ,YAAJ,CAAiB;AAC9BG,EAAAA,KAD8B;AAE9BE,EAAAA,GAAG,EAAE,gCAFyB;AAG9BC,EAAAA,YAAY,EAAE;AACZC,IAAAA,WAAW,EAAE;AADD,GAHgB;AAM9BC,EAAAA,OAAO,EAAEC,SAAS,IAAI;AACpB,UAAMC,KAAK,GAAGC,YAAY,CAACC,OAAb,CAAqB,WAArB,KAAqC,EAAnD;AACAH,IAAAA,SAAS,CAACI,UAAV,CAAqB;AACnBC,MAAAA,OAAO,EAAE;AACPC,QAAAA,aAAa,EAAG,OAAML,KAAM;AADrB;AADU,KAArB;AAKD,GAb6B;AAc9BM,EAAAA,WAAW,EAAE;AACXC,IAAAA,QAAQ,EAAE;AACRC,MAAAA,UAAU,EAAE,CAAC,CAACP,YAAY,CAACC,OAAb,CAAqB,WAArB;AADN;AADC;AAdiB,CAAjB,CAAf;AAqBA,MAAMO,YAAY,GAAGlB,GAAI;;;;CAAzB;AAMAP,QAAQ,CAAC0B,MAAT,eACE,oBAAC,cAAD;AAAgB,EAAA,MAAM,EAAEhB,MAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBACE,oBAAC,aAAD;AAAe,EAAA,KAAK,EAAEN,KAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBACE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADF,CADF,CADF,EAOEuB,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAPF,E,CAUA;AACA;AACA;;AACA1B,aAAa,CAAC2B,UAAd","sourcesContent":["import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nimport { ThemeProvider } from \"@material-ui/core/styles\";\nimport theme from \"./styling/theme\";\n\nimport { ApolloProvider } from \"react-apollo\";\nimport ApolloClient, { gql } from \"apollo-boost\";\nimport { InMemoryCache } from \"apollo-cache-inmemory\";\n\nconst cache = new InMemoryCache();\n\nconst client = new ApolloClient({\n  cache,\n  uri: \"http://127.0.0.1:8000/graphql/\",\n  fetchOptions: {\n    credentials: \"include\"\n  },\n  request: operation => {\n    const token = localStorage.getItem(\"authToken\") || \"\";\n    operation.setContext({\n      headers: {\n        Authorization: `JWT ${token}`\n      }\n    });\n  },\n  clientState: {\n    defaults: {\n      isLoggedIn: !!localStorage.getItem(\"authToken\")\n    }\n  }\n});\n\nconst IS_LOGGED_IN = gql`\n  {\n    isLoggedIn @client\n  }\n`;\n\nReactDOM.render(\n  <ApolloProvider client={client}>\n    <ThemeProvider theme={theme}>\n      <App />\n    </ThemeProvider>\n  </ApolloProvider>,\n\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"]},"metadata":{},"sourceType":"module"}