{"ast":null,"code":"import _slicedToArray from\"/Users/georgehart/Documents/WebDev/MyProjects/hamtiltonharttech/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState}from\"react\";import{useMutation}from\"@apollo/react-hooks\";import{UPDATE_NOTE}from\"../../gql\";import{makeStyles,Container,TextField,FormControl,Button,Grid}from\"@material-ui/core\";var useStyles=makeStyles(function(theme){return{buttons:{marginLeft:theme.spacing(2),marginRight:theme.spacing(2)}};});export var EditNote=function EditNote(_ref){var note=_ref.note,toggle=_ref.toggle;var _useState=useState(note.title),_useState2=_slicedToArray(_useState,2),title=_useState2[0],setTitle=_useState2[1];var _useState3=useState(note.bodyText),_useState4=_slicedToArray(_useState3,2),bodyText=_useState4[0],setBodyText=_useState4[1];var _useState5=useState(note.summary),_useState6=_slicedToArray(_useState5,2),summary=_useState6[0],setSummary=_useState6[1];var _useMutation=useMutation(UPDATE_NOTE),_useMutation2=_slicedToArray(_useMutation,2),updateNote=_useMutation2[0],error=_useMutation2[1].error;var handleSubmit=function handleSubmit(e){e.preventDefault();updateNote({variables:{id:note.id,title:title,bodyText:bodyText,summary:summary},onCompleted:updateCompleted()});};var updateCompleted=function updateCompleted(){toggle();};var classes=useStyles();return/*#__PURE__*/React.createElement(Container,null,/*#__PURE__*/React.createElement(Grid,{component:\"form\",container:true,spacing:3,direction:\"column\",onSubmit:function onSubmit(e){return handleSubmit(e);}},/*#__PURE__*/React.createElement(Grid,{item:true,xs:12},/*#__PURE__*/React.createElement(FormControl,{fullWidth:true},/*#__PURE__*/React.createElement(TextField,{label:\"Note Title\",variant:\"outlined\",value:title,required:true,onChange:function onChange(e){return setTitle(e.target.value);}}))),/*#__PURE__*/React.createElement(Grid,{item:true,xs:12},/*#__PURE__*/React.createElement(FormControl,{fullWidth:true},/*#__PURE__*/React.createElement(TextField,{label:\"Summary\",variant:\"outlined\",value:summary,required:true,onChange:function onChange(e){return setSummary(e.target.value);}}))),/*#__PURE__*/React.createElement(Grid,{item:true,xs:12},/*#__PURE__*/React.createElement(FormControl,{fullWidth:true},/*#__PURE__*/React.createElement(TextField,{label:\"Note Body\",variant:\"outlined\",rows:\"20\",multiline:true,value:bodyText,required:true,onChange:function onChange(e){return setBodyText(e.target.value);}}))),/*#__PURE__*/React.createElement(Grid,{item:true,xs:12},/*#__PURE__*/React.createElement(Button,{className:classes.buttons,type:\"submit\",variant:\"contained\",color:\"primary\",size:\"large\"},\"Confirm Update\"),/*#__PURE__*/React.createElement(Button,{className:classes.buttons,variant:\"outlined\",color:\"primary\",size:\"large\",onClick:toggle},\"Cancel\"))));};","map":{"version":3,"sources":["/Users/georgehart/Documents/WebDev/MyProjects/hamtiltonharttech/frontend/src/components/Notes/EditNote.js"],"names":["React","useState","useMutation","UPDATE_NOTE","makeStyles","Container","TextField","FormControl","Button","Grid","useStyles","theme","buttons","marginLeft","spacing","marginRight","EditNote","note","toggle","title","setTitle","bodyText","setBodyText","summary","setSummary","updateNote","error","handleSubmit","e","preventDefault","variables","id","onCompleted","updateCompleted","classes","target","value"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\n\nimport { useMutation } from \"@apollo/react-hooks\";\nimport { UPDATE_NOTE } from \"../../gql\";\n\nimport {\n  makeStyles,\n  Container,\n  TextField,\n  FormControl,\n  Button,\n  Grid\n} from \"@material-ui/core\";\n\nconst useStyles = makeStyles(theme => ({\n  buttons: {\n    marginLeft: theme.spacing(2),\n    marginRight: theme.spacing(2)\n  }\n}));\n\nexport const EditNote = ({ note, toggle }) => {\n  const [title, setTitle] = useState(note.title);\n  const [bodyText, setBodyText] = useState(note.bodyText);\n  const [summary, setSummary] = useState(note.summary);\n\n  const [updateNote, { error }] = useMutation(UPDATE_NOTE);\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    updateNote({\n      variables: {\n        id: note.id,\n        title,\n        bodyText,\n        summary\n      },\n      onCompleted: updateCompleted()\n    });\n  };\n\n  const updateCompleted = () => {\n    toggle();\n  };\n\n  const classes = useStyles();\n\n  return (\n    <Container>\n      <Grid\n        component=\"form\"\n        container\n        spacing={3}\n        direction=\"column\"\n        onSubmit={e => handleSubmit(e)}\n      >\n        <Grid item xs={12}>\n          <FormControl fullWidth>\n            <TextField\n              label=\"Note Title\"\n              variant=\"outlined\"\n              value={title}\n              required\n              onChange={e => setTitle(e.target.value)}\n            />\n          </FormControl>\n        </Grid>\n        <Grid item xs={12}>\n          <FormControl fullWidth>\n            <TextField\n              label=\"Summary\"\n              variant=\"outlined\"\n              value={summary}\n              required\n              onChange={e => setSummary(e.target.value)}\n            />\n          </FormControl>\n        </Grid>\n        <Grid item xs={12}>\n          <FormControl fullWidth>\n            <TextField\n              label=\"Note Body\"\n              variant=\"outlined\"\n              rows=\"20\"\n              multiline\n              value={bodyText}\n              required\n              onChange={e => setBodyText(e.target.value)}\n            />\n          </FormControl>\n        </Grid>\n        <Grid item xs={12}>\n          <Button\n            className={classes.buttons}\n            type=\"submit\"\n            variant=\"contained\"\n            color=\"primary\"\n            size=\"large\"\n          >\n            Confirm Update\n          </Button>\n          <Button\n            className={classes.buttons}\n            variant=\"outlined\"\n            color=\"primary\"\n            size=\"large\"\n            onClick={toggle}\n          >\n            Cancel\n          </Button>\n        </Grid>\n      </Grid>\n    </Container>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}