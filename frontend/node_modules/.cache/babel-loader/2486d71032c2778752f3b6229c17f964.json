{"ast":null,"code":"var _jsxFileName = \"/Users/georgehart/Documents/WebDev/MyProjects/hamtiltonharttech/frontend/src/pages/NoteDetailPage.js\";\nimport React from \"react\";\nimport { Typography, Divider, Paper } from \"@material-ui/core\";\nimport { useQuery } from \"@apollo/react-hooks\";\nimport { NOTE_QUERY, NOTES_QUERY } from \"../gql\";\nexport const NoteDetailPage = ({\n  noteId\n}) => {\n  const {\n    data,\n    loading,\n    error\n  } = useQuery(NOTE_QUERY, {\n    variables: {\n      id: noteId\n    }\n  });\n\n  const ReactMarkdown = require(\"react-markdown\");\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, loading && /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 19\n    }\n  }, \"Loading...\"), error && /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 17\n    }\n  }, error.message), data && /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h3\",\n    align: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 11\n    }\n  }, `Detail Page ${data.note.title}`), /*#__PURE__*/React.createElement(Divider, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Typography, {\n    variant: \"subheading1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 11\n    }\n  }, data.note.summary), /*#__PURE__*/React.createElement(Divider, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(ReactMarkdown, {\n    source: data.note.bodyText,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 11\n    }\n  })));\n};","map":{"version":3,"sources":["/Users/georgehart/Documents/WebDev/MyProjects/hamtiltonharttech/frontend/src/pages/NoteDetailPage.js"],"names":["React","Typography","Divider","Paper","useQuery","NOTE_QUERY","NOTES_QUERY","NoteDetailPage","noteId","data","loading","error","variables","id","ReactMarkdown","require","message","note","title","summary","bodyText"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,UAAT,EAAqBC,OAArB,EAA8BC,KAA9B,QAA2C,mBAA3C;AAEA,SAASC,QAAT,QAAyB,qBAAzB;AACA,SAASC,UAAT,EAAqBC,WAArB,QAAwC,QAAxC;AAEA,OAAO,MAAMC,cAAc,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAgB;AAC5C,QAAM;AAAEC,IAAAA,IAAF;AAAQC,IAAAA,OAAR;AAAiBC,IAAAA;AAAjB,MAA2BP,QAAQ,CAACC,UAAD,EAAa;AACpDO,IAAAA,SAAS,EAAE;AAAEC,MAAAA,EAAE,EAAEL;AAAN;AADyC,GAAb,CAAzC;;AAIA,QAAMM,aAAa,GAAGC,OAAO,CAAC,gBAAD,CAA7B;;AAEA,sBACE,0CACGL,OAAO,iBAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADd,EAEGC,KAAK,iBAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKA,KAAK,CAACK,OAAX,CAFZ,EAGGP,IAAI,iBACH,uDACE,oBAAC,UAAD;AAAY,IAAA,OAAO,EAAC,IAApB;AAAyB,IAAA,KAAK,EAAC,QAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,eAAcA,IAAI,CAACQ,IAAL,CAAUC,KAAM,EADlC,CADF,eAIE,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJF,eAKE,oBAAC,UAAD;AAAY,IAAA,OAAO,EAAC,aAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAmCT,IAAI,CAACQ,IAAL,CAAUE,OAA7C,CALF,eAME,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANF,eAOE,oBAAC,aAAD;AAAe,IAAA,MAAM,EAAEV,IAAI,CAACQ,IAAL,CAAUG,QAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPF,CAJJ,CADF;AAiBD,CAxBM","sourcesContent":["import React from \"react\";\nimport { Typography, Divider, Paper } from \"@material-ui/core\";\n\nimport { useQuery } from \"@apollo/react-hooks\";\nimport { NOTE_QUERY, NOTES_QUERY } from \"../gql\";\n\nexport const NoteDetailPage = ({ noteId }) => {\n  const { data, loading, error } = useQuery(NOTE_QUERY, {\n    variables: { id: noteId }\n  });\n\n  const ReactMarkdown = require(\"react-markdown\");\n\n  return (\n    <>\n      {loading && <h1>Loading...</h1>}\n      {error && <h3>{error.message}</h3>}\n      {data && (\n        <>\n          <Typography variant=\"h3\" align=\"center\">\n            {`Detail Page ${data.note.title}`}\n          </Typography>\n          <Divider />\n          <Typography variant=\"subheading1\">{data.note.summary}</Typography>\n          <Divider />\n          <ReactMarkdown source={data.note.bodyText} />\n        </>\n      )}\n    </>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}