{"ast":null,"code":"import _slicedToArray from\"/Users/georgehart/Documents/WebDev/MyProjects/hamtiltonharttech/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState}from\"react\";import{navigate}from\"@reach/router\";import{useMutation}from\"@apollo/react-hooks\";import{CREATE_NOTE,NOTES_QUERY}from\"../../gql\";import{Container,TextField,FormControl,Button,Grid}from\"@material-ui/core\";export var CreateNote=function CreateNote(){var _useState=useState(\"\"),_useState2=_slicedToArray(_useState,2),title=_useState2[0],setTitle=_useState2[1];var _useState3=useState(\"\"),_useState4=_slicedToArray(_useState3,2),bodyText=_useState4[0],setBodyText=_useState4[1];var _useState5=useState(\"\"),_useState6=_slicedToArray(_useState5,2),summary=_useState6[0],setSummary=_useState6[1];var _useMutation=useMutation(CREATE_NOTE),_useMutation2=_slicedToArray(_useMutation,2),createNote=_useMutation2[0],error=_useMutation2[1].error;var handleSubmit=function handleSubmit(e){e.preventDefault();createNote({variables:{title:title,bodyText:bodyText,summary:summary},refetchQueries:[{query:NOTES_QUERY}],onCompleted:createCompleted()});};var createCompleted=function createCompleted(){setTitle(\"\");setBodyText(\"\");setSummary(\"\");navigate(\"/\");};return/*#__PURE__*/React.createElement(Container,null,/*#__PURE__*/React.createElement(Grid,{component:\"form\",container:true,spacing:3,direction:\"column\",onSubmit:function onSubmit(e){return handleSubmit(e);}},/*#__PURE__*/React.createElement(Grid,{item:true,xs:12},/*#__PURE__*/React.createElement(FormControl,{fullWidth:true},/*#__PURE__*/React.createElement(TextField,{label:\"Note Title\",variant:\"outlined\",value:title,required:true,onChange:function onChange(e){return setTitle(e.target.value);}}))),/*#__PURE__*/React.createElement(Grid,{item:true,xs:12},/*#__PURE__*/React.createElement(FormControl,{fullWidth:true},/*#__PURE__*/React.createElement(TextField,{label:\"Summary\",variant:\"outlined\",value:summary,required:true,onChange:function onChange(e){return setSummary(e.target.value);}}))),/*#__PURE__*/React.createElement(Grid,{item:true,xs:12},/*#__PURE__*/React.createElement(FormControl,{fullWidth:true},/*#__PURE__*/React.createElement(TextField,{label:\"Note Body\",variant:\"outlined\",rows:\"20\",multiline:true,value:bodyText,required:true,onChange:function onChange(e){return setBodyText(e.target.value);}}))),/*#__PURE__*/React.createElement(Grid,{item:true,xs:12},/*#__PURE__*/React.createElement(Button,{type:\"submit\",variant:\"contained\",color:\"primary\"},\"Create Note\"))));};","map":{"version":3,"sources":["/Users/georgehart/Documents/WebDev/MyProjects/hamtiltonharttech/frontend/src/components/Notes/CreateNote.js"],"names":["React","useState","navigate","useMutation","CREATE_NOTE","NOTES_QUERY","Container","TextField","FormControl","Button","Grid","CreateNote","title","setTitle","bodyText","setBodyText","summary","setSummary","createNote","error","handleSubmit","e","preventDefault","variables","refetchQueries","query","onCompleted","createCompleted","target","value"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { navigate } from \"@reach/router\";\n\nimport { useMutation } from \"@apollo/react-hooks\";\nimport { CREATE_NOTE, NOTES_QUERY } from \"../../gql\";\n\nimport {\n  Container,\n  TextField,\n  FormControl,\n  Button,\n  Grid\n} from \"@material-ui/core\";\n\nexport const CreateNote = () => {\n  const [title, setTitle] = useState(\"\");\n  const [bodyText, setBodyText] = useState(\"\");\n  const [summary, setSummary] = useState(\"\");\n\n  const [createNote, { error }] = useMutation(CREATE_NOTE);\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    createNote({\n      variables: {\n        title,\n        bodyText,\n        summary\n      },\n      refetchQueries: [{ query: NOTES_QUERY }],\n      onCompleted: createCompleted()\n    });\n  };\n\n  const createCompleted = () => {\n    setTitle(\"\");\n    setBodyText(\"\");\n    setSummary(\"\");\n    navigate(\"/\");\n  };\n\n  return (\n    <Container>\n      <Grid\n        component=\"form\"\n        container\n        spacing={3}\n        direction=\"column\"\n        onSubmit={e => handleSubmit(e)}\n      >\n        <Grid item xs={12}>\n          <FormControl fullWidth>\n            <TextField\n              label=\"Note Title\"\n              variant=\"outlined\"\n              value={title}\n              required\n              onChange={e => setTitle(e.target.value)}\n            />\n          </FormControl>\n        </Grid>\n        <Grid item xs={12}>\n          <FormControl fullWidth>\n            <TextField\n              label=\"Summary\"\n              variant=\"outlined\"\n              value={summary}\n              required\n              onChange={e => setSummary(e.target.value)}\n            />\n          </FormControl>\n        </Grid>\n        <Grid item xs={12}>\n          <FormControl fullWidth>\n            <TextField\n              label=\"Note Body\"\n              variant=\"outlined\"\n              rows=\"20\"\n              multiline\n              value={bodyText}\n              required\n              onChange={e => setBodyText(e.target.value)}\n            />\n          </FormControl>\n        </Grid>\n        <Grid item xs={12}>\n          <Button type=\"submit\" variant=\"contained\" color=\"primary\">\n            Create Note\n          </Button>\n        </Grid>\n      </Grid>\n    </Container>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}