{"ast":null,"code":"import _taggedTemplateLiteral from\"/Users/georgehart/Documents/WebDev/MyProjects/hamtiltonharttech/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";function _templateObject5(){var data=_taggedTemplateLiteral([\"\\n  mutation($id: Int!) {\\n    deleteNote(id: $id) {\\n      id\\n    }\\n  }\\n\"]);_templateObject5=function _templateObject5(){return data;};return data;}function _templateObject4(){var data=_taggedTemplateLiteral([\"\\n  mutation($id: Int!, $title: String, $bodyText: String, $summary: String) {\\n    updateNote(id: $id, title: $title, bodyText: $bodyText, summary: $summary) {\\n      note {\\n        id\\n        title\\n        summary\\n        bodyText\\n      }\\n    }\\n  }\\n\"]);_templateObject4=function _templateObject4(){return data;};return data;}function _templateObject3(){var data=_taggedTemplateLiteral([\"\\n  mutation($title: String!, $bodyText: String!, $summary: String) {\\n    createNote(title: $title, bodyText: $bodyText, summary: $summary) {\\n      note {\\n        id\\n        title\\n        summary\\n        bodyText\\n      }\\n    }\\n  }\\n\"]);_templateObject3=function _templateObject3(){return data;};return data;}function _templateObject2(){var data=_taggedTemplateLiteral([\"\\n  query($id: Int!) {\\n    note(id: $id) {\\n      id\\n      title\\n      summary\\n      bodyText\\n    }\\n  }\\n\"]);_templateObject2=function _templateObject2(){return data;};return data;}function _templateObject(){var data=_taggedTemplateLiteral([\"\\n  {\\n    notes {\\n      id\\n      title\\n      summary\\n    }\\n  }\\n\"]);_templateObject=function _templateObject(){return data;};return data;}import{gql}from\"apollo-boost\";export var NOTES_QUERY=gql(_templateObject());export var NOTE_QUERY=gql(_templateObject2());// Mutations\nexport var CREATE_NOTE=gql(_templateObject3());export var UPDATE_NOTE=gql(_templateObject4());export var DELETE_NOTE=gql(_templateObject5());","map":{"version":3,"sources":["/Users/georgehart/Documents/WebDev/MyProjects/hamtiltonharttech/frontend/src/gql/NotesGQL.js"],"names":["gql","NOTES_QUERY","NOTE_QUERY","CREATE_NOTE","UPDATE_NOTE","DELETE_NOTE"],"mappings":"mnDAAA,OAASA,GAAT,KAAoB,cAApB,CAEA,MAAO,IAAMC,CAAAA,WAAW,CAAGD,GAAH,mBAAjB,CAUP,MAAO,IAAME,CAAAA,UAAU,CAAGF,GAAH,oBAAhB,CAWP;AAEA,MAAO,IAAMG,CAAAA,WAAW,CAAGH,GAAH,oBAAjB,CAaP,MAAO,IAAMI,CAAAA,WAAW,CAAGJ,GAAH,oBAAjB,CAaP,MAAO,IAAMK,CAAAA,WAAW,CAAGL,GAAH,oBAAjB","sourcesContent":["import { gql } from \"apollo-boost\";\n\nexport const NOTES_QUERY = gql`\n  {\n    notes {\n      id\n      title\n      summary\n    }\n  }\n`;\n\nexport const NOTE_QUERY = gql`\n  query($id: Int!) {\n    note(id: $id) {\n      id\n      title\n      summary\n      bodyText\n    }\n  }\n`;\n\n// Mutations\n\nexport const CREATE_NOTE = gql`\n  mutation($title: String!, $bodyText: String!, $summary: String) {\n    createNote(title: $title, bodyText: $bodyText, summary: $summary) {\n      note {\n        id\n        title\n        summary\n        bodyText\n      }\n    }\n  }\n`;\n\nexport const UPDATE_NOTE = gql`\n  mutation($id: Int!, $title: String, $bodyText: String, $summary: String) {\n    updateNote(id: $id, title: $title, bodyText: $bodyText, summary: $summary) {\n      note {\n        id\n        title\n        summary\n        bodyText\n      }\n    }\n  }\n`;\n\nexport const DELETE_NOTE = gql`\n  mutation($id: Int!) {\n    deleteNote(id: $id) {\n      id\n    }\n  }\n`;\n"]},"metadata":{},"sourceType":"module"}