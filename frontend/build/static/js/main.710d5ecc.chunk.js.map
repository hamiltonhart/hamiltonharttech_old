{"version":3,"sources":["markdown/test.md","styling/theme.js","components/Global/PrimaryLayout.js","App.js","serviceWorker.js","index.js","gql/AuthGQL.js","gql/NotesGQL.js","components/Notes/NoteListItem.js","components/Notes/CreateNote.js","components/Notes/EditNote.js","pages/index.js","pages/NotesListPage.js","pages/CreateNotePage.js","components/Auth/Login.js","pages/LoginPage.js","pages/NoteDetailPage.js","utilities/Toggle.js","components/MarkDown.js"],"names":["module","exports","theme","createMuiTheme","palette","type","primary","main","useStyles","makeStyles","heading","padding","spacing","textTransform","mainBg","position","width","borderRadius","boxShadow","shadows","appBar","PrimaryLayout","children","classes","Paper","className","Grid","Button","component","Link","to","Typography","variant","App","ThemeProvider","path","Boolean","window","location","hostname","match","cache","InMemoryCache","client","ApolloClient","uri","fetchOptions","credentials","request","operation","token","localStorage","getItem","setContext","headers","Authorization","clientState","defaults","isLoggedIn","IS_LOGGED_IN","gql","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message","LOGIN_MUT","NOTES_QUERY","NOTE_QUERY","CREATE_NOTE","UPDATE_NOTE","DELETE_NOTE","root","display","marginTop","textDecoration","NoteListItem","note","elevation","id","title","summary","CreateNote","useState","setTitle","bodyText","setBodyText","setSummary","useMutation","createNote","createCompleted","navigate","Container","container","direction","onSubmit","e","preventDefault","variables","refetchQueries","query","onCompleted","handleSubmit","item","xs","FormControl","fullWidth","TextField","label","value","required","onChange","target","rows","multiline","color","buttons","marginLeft","marginRight","EditNote","toggle","updateNote","updateCompleted","size","onClick","listContainer","listItem","marginBottom","NotesListPage","useQuery","data","loading","align","notes","map","key","CreateNotePage","gutterBottom","Login","username","setUsername","password","setPassword","tokenAuth","useApolloClient","a","res","setItem","writeData","maxWidth","LoginPage","subheading","backgroundColor","noteContainer","button","NoteDetailPage","noteId","currentId","deleteActive","setDeleteActive","deleteNote","on","setOn","useToggle","editOn","editToggle","ReactMarkdown","require","onDeleteCompleted","log","source","ClickAwayListener","onClickAway","handleDelete"],"mappings":"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","file":"static/js/main.710d5ecc.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/test.c3eaabcb.md\";","import { createMuiTheme } from \"@material-ui/core\";\n\nconst theme = createMuiTheme({\n  palette: {\n    type: \"dark\",\n    primary: { main: \"#9c58f4\" }\n  }\n});\n\nexport default theme;\n","import React from \"react\";\nimport { Link } from \"@reach/router\";\n\nimport { makeStyles, Paper, Grid, Typography, Button } from \"@material-ui/core\";\n\nconst useStyles = makeStyles(theme => ({\n  heading: {\n    padding: theme.spacing(2),\n    textTransform: \"none\"\n  },\n  mainBg: {\n    position: \"relative\",\n    width: \"100vw\",\n    borderRadius: \"0\",\n    boxShadow: theme.shadows[0]\n  },\n  appBar: {\n    position: \"relative\"\n  }\n}));\n\nexport const PrimaryLayout = ({ children }) => {\n  const classes = useStyles();\n  return (\n    <>\n      <Paper className={classes.mainBg}>\n        <Grid className={classes.appBar}>\n          <Button className={classes.heading} component={Link} to=\"/\">\n            <Typography variant=\"h5\">Hamilton Hart</Typography>\n          </Button>\n        </Grid>\n        {children}\n      </Paper>\n    </>\n  );\n};\n","import React from \"react\";\nimport \"./App.css\";\nimport { Router } from \"@reach/router\";\n\nimport { ThemeProvider } from \"@material-ui/core\";\nimport theme from \"./styling/theme\";\n\nimport {\n  NotesListPage,\n  NoteDetailPage,\n  LoginPage,\n  CreateNotePage\n} from \"./pages\";\nimport { PrimaryLayout } from \"./components/Global/PrimaryLayout\";\n\nfunction App() {\n  return (\n    <ThemeProvider theme={theme}>\n      <PrimaryLayout>\n        <Router>\n          <NotesListPage path=\"/\" />\n          <NoteDetailPage path=\"/notes/:noteId\" />\n          <CreateNotePage path=\"/notes/create\" />\n          <LoginPage path=\"/login\" />\n        </Router>\n      </PrimaryLayout>\n    </ThemeProvider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nimport { ThemeProvider } from \"@material-ui/core/styles\";\nimport theme from \"./styling/theme\";\n\nimport { ApolloProvider } from \"react-apollo\";\nimport ApolloClient, { gql } from \"apollo-boost\";\nimport { InMemoryCache } from \"apollo-cache-inmemory\";\n\nconst cache = new InMemoryCache();\n\nconst client = new ApolloClient({\n  cache,\n  uri: \"http://127.0.0.1:8000/graphql/\",\n  fetchOptions: {\n    credentials: \"include\"\n  },\n  request: operation => {\n    const token = localStorage.getItem(\"authToken\") || \"\";\n    operation.setContext({\n      headers: {\n        Authorization: `JWT ${token}`\n      }\n    });\n  },\n  clientState: {\n    defaults: {\n      isLoggedIn: !!localStorage.getItem(\"authToken\")\n    }\n  }\n});\n\nexport const IS_LOGGED_IN = gql`\n  {\n    isLoggedIn @client\n  }\n`;\n\nReactDOM.render(\n  <ApolloProvider client={client}>\n    <ThemeProvider theme={theme}>\n      <App />\n    </ThemeProvider>\n  </ApolloProvider>,\n\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import { gql } from \"apollo-boost\";\n\nexport const LOGIN_MUT = gql`\n  mutation($username: String!, $password: String!) {\n    tokenAuth(username: $username, password: $password) {\n      token\n    }\n  }\n`;\n","import { gql } from \"apollo-boost\";\n\nexport const NOTES_QUERY = gql`\n  {\n    notes {\n      id\n      title\n      summary\n    }\n  }\n`;\n\nexport const NOTE_QUERY = gql`\n  query($id: Int!) {\n    note(id: $id) {\n      id\n      title\n      summary\n      bodyText\n    }\n  }\n`;\n\n// Mutations\n\nexport const CREATE_NOTE = gql`\n  mutation($title: String!, $bodyText: String!, $summary: String) {\n    createNote(title: $title, bodyText: $bodyText, summary: $summary) {\n      note {\n        id\n        title\n        summary\n        bodyText\n      }\n    }\n  }\n`;\n\nexport const UPDATE_NOTE = gql`\n  mutation($id: Int!, $title: String, $bodyText: String, $summary: String) {\n    updateNote(id: $id, title: $title, bodyText: $bodyText, summary: $summary) {\n      note {\n        id\n        title\n        summary\n        bodyText\n      }\n    }\n  }\n`;\n\nexport const DELETE_NOTE = gql`\n  mutation($id: Int!) {\n    deleteNote(id: $id) {\n      id\n    }\n  }\n`;\n","import React from \"react\";\nimport { Link } from \"@reach/router\";\nimport { makeStyles, Typography, Paper } from \"@material-ui/core\";\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: \"block\",\n    marginTop: theme.spacing(3),\n    padding: theme.spacing(3),\n    textDecoration: \"none\"\n  }\n}));\n\n// const ReactMarkdown = require(\"react-markdown\");\n\nexport const NoteListItem = ({ note }) => {\n  const classes = useStyles();\n\n  return (\n    <Paper\n      className={classes.root}\n      elevation={6}\n      component={Link}\n      to={`/notes/${note.id}`}\n    >\n      <Typography variant=\"h4\">{note.title}</Typography>\n      <Typography>{note.summary}</Typography>\n      {/* <ReactMarkdown source={note.bodyText} /> */}\n    </Paper>\n  );\n};\n","import React, { useState } from \"react\";\nimport { navigate } from \"@reach/router\";\n\nimport { useMutation } from \"@apollo/react-hooks\";\nimport { CREATE_NOTE, NOTES_QUERY } from \"../../gql\";\n\nimport {\n  Container,\n  TextField,\n  FormControl,\n  Button,\n  Grid\n} from \"@material-ui/core\";\n\nexport const CreateNote = () => {\n  const [title, setTitle] = useState(\"\");\n  const [bodyText, setBodyText] = useState(\"\");\n  const [summary, setSummary] = useState(\"\");\n\n  const [createNote, { error }] = useMutation(CREATE_NOTE);\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    createNote({\n      variables: {\n        title,\n        bodyText,\n        summary\n      },\n      refetchQueries: [{ query: NOTES_QUERY }],\n      onCompleted: createCompleted()\n    });\n  };\n\n  const createCompleted = () => {\n    setTitle(\"\");\n    setBodyText(\"\");\n    setSummary(\"\");\n    navigate(\"/\");\n  };\n\n  return (\n    <Container>\n      <Grid\n        component=\"form\"\n        container\n        spacing={3}\n        direction=\"column\"\n        onSubmit={e => handleSubmit(e)}\n      >\n        <Grid item xs={12}>\n          <FormControl fullWidth>\n            <TextField\n              label=\"Note Title\"\n              variant=\"outlined\"\n              value={title}\n              required\n              onChange={e => setTitle(e.target.value)}\n            />\n          </FormControl>\n        </Grid>\n        <Grid item xs={12}>\n          <FormControl fullWidth>\n            <TextField\n              label=\"Summary\"\n              variant=\"outlined\"\n              value={summary}\n              required\n              onChange={e => setSummary(e.target.value)}\n            />\n          </FormControl>\n        </Grid>\n        <Grid item xs={12}>\n          <FormControl fullWidth>\n            <TextField\n              label=\"Note Body\"\n              variant=\"outlined\"\n              rows=\"20\"\n              multiline\n              value={bodyText}\n              required\n              onChange={e => setBodyText(e.target.value)}\n            />\n          </FormControl>\n        </Grid>\n        <Grid item xs={12}>\n          <Button type=\"submit\" variant=\"contained\" color=\"primary\">\n            Create Note\n          </Button>\n        </Grid>\n      </Grid>\n    </Container>\n  );\n};\n","import React, { useState } from \"react\";\n\nimport { useMutation } from \"@apollo/react-hooks\";\nimport { UPDATE_NOTE } from \"../../gql\";\n\nimport {\n  makeStyles,\n  Container,\n  TextField,\n  FormControl,\n  Button,\n  Grid\n} from \"@material-ui/core\";\n\nconst useStyles = makeStyles(theme => ({\n  buttons: {\n    marginLeft: theme.spacing(2),\n    marginRight: theme.spacing(2)\n  }\n}));\n\nexport const EditNote = ({ note, toggle }) => {\n  const [title, setTitle] = useState(note.title);\n  const [bodyText, setBodyText] = useState(note.bodyText);\n  const [summary, setSummary] = useState(note.summary);\n\n  const [updateNote, { error }] = useMutation(UPDATE_NOTE);\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    updateNote({\n      variables: {\n        id: note.id,\n        title,\n        bodyText,\n        summary\n      },\n      onCompleted: updateCompleted()\n    });\n  };\n\n  const updateCompleted = () => {\n    toggle();\n  };\n\n  const classes = useStyles();\n\n  return (\n    <Container>\n      <Grid\n        component=\"form\"\n        container\n        spacing={3}\n        direction=\"column\"\n        onSubmit={e => handleSubmit(e)}\n      >\n        <Grid item xs={12}>\n          <FormControl fullWidth>\n            <TextField\n              label=\"Note Title\"\n              variant=\"outlined\"\n              value={title}\n              required\n              onChange={e => setTitle(e.target.value)}\n            />\n          </FormControl>\n        </Grid>\n        <Grid item xs={12}>\n          <FormControl fullWidth>\n            <TextField\n              label=\"Summary\"\n              variant=\"outlined\"\n              value={summary}\n              required\n              onChange={e => setSummary(e.target.value)}\n            />\n          </FormControl>\n        </Grid>\n        <Grid item xs={12}>\n          <FormControl fullWidth>\n            <TextField\n              label=\"Note Body\"\n              variant=\"outlined\"\n              rows=\"20\"\n              multiline\n              value={bodyText}\n              required\n              onChange={e => setBodyText(e.target.value)}\n            />\n          </FormControl>\n        </Grid>\n        <Grid item xs={12}>\n          <Button\n            className={classes.buttons}\n            type=\"submit\"\n            variant=\"contained\"\n            color=\"primary\"\n            size=\"large\"\n          >\n            Confirm Update\n          </Button>\n          <Button\n            className={classes.buttons}\n            variant=\"outlined\"\n            color=\"primary\"\n            size=\"large\"\n            onClick={toggle}\n          >\n            Cancel\n          </Button>\n        </Grid>\n      </Grid>\n    </Container>\n  );\n};\n","export * from \"./HomePage\";\nexport * from \"./LoginPage\";\nexport * from \"./NotesListPage\";\nexport * from \"./CreateNotePage\";\nexport * from \"./NoteDetailPage\";\nexport * from \"./EditNotePage\";\n","import React from \"react\";\nimport { Link } from \"@reach/router\";\nimport { NoteListItem } from \"../components/Notes\";\n\nimport { makeStyles, Typography, Button, Paper } from \"@material-ui/core\";\n\nimport { NOTES_QUERY } from \"../gql\";\nimport { useQuery } from \"@apollo/react-hooks\";\n\nconst useStyles = makeStyles(theme => ({\n  listContainer: {\n    padding: theme.spacing(2)\n  },\n  listItem: {\n    marginTop: theme.spacing(2),\n    marginBottom: theme.spacing(2)\n  }\n}));\n\nexport const NotesListPage = () => {\n  const { data, loading, error } = useQuery(NOTES_QUERY);\n\n  const classes = useStyles();\n\n  return (\n    <div>\n      <Typography variant=\"h3\" align=\"center\">\n        Notes\n      </Typography>\n      <Paper className={classes.listContainer} elevation={0}>\n        <Button\n          color=\"primary\"\n          variant=\"contained\"\n          size=\"large\"\n          component={Link}\n          to=\"/notes/create\"\n        >\n          Add Note\n        </Button>\n        {loading && <h1>Loading...</h1>}\n        {error && <h1>{error.message}</h1>}\n        {data &&\n          data.notes.map(note => (\n            <NoteListItem\n              key={note.id}\n              note={note}\n              className={classes.listItem}\n            />\n          ))}\n      </Paper>\n    </div>\n  );\n};\n","import React from \"react\";\n\nimport { Typography, Paper } from \"@material-ui/core\";\n\nimport { CreateNote } from \"../components/Notes\";\n\nexport const CreateNotePage = () => {\n  return (\n    <>\n      <Typography variant=\"h3\" align=\"center\" gutterBottom>\n        Create Note\n      </Typography>\n      <CreateNote />;\n    </>\n  );\n};\n","import React, { useState } from \"react\";\n\nimport {\n  makeStyles,\n  Grid,\n  Container,\n  TextField,\n  Button,\n  FormControl,\n  Typography\n} from \"@material-ui/core\";\n\nimport { LOGIN_MUT } from \"../../gql\";\nimport { useMutation, useApolloClient } from \"@apollo/react-hooks\";\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    marginTop: theme.spacing(8),\n    padding: theme.spacing(4),\n    boxShadow: theme.shadows[3]\n  },\n  heading: {\n    textTransform: \"uppercase\"\n  }\n}));\n\nexport const Login = () => {\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n\n  const [tokenAuth, { error }] = useMutation(LOGIN_MUT);\n  const client = useApolloClient();\n\n  const classes = useStyles();\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const res = await tokenAuth({ variables: { username, password } });\n    localStorage.setItem(\"authToken\", res.data.tokenAuth.token);\n    client.writeData({ data: { isLoggedIn: true } });\n  };\n\n  return (\n    <Container className={classes.root} maxWidth=\"sm\">\n      <Grid\n        component=\"form\"\n        container\n        spacing={1}\n        direction=\"column\"\n        onSubmit={e => handleSubmit(e)}\n      >\n        <Grid item>\n          <Typography\n            className={classes.heading}\n            variant=\"h3\"\n            align=\"center\"\n            gutterBottom\n          >\n            Login\n          </Typography>\n        </Grid>\n        <Grid item xs={12}>\n          <FormControl fullWidth>\n            <TextField\n              label=\"Username\"\n              variant=\"outlined\"\n              onChange={e => setUsername(e.target.value)}\n            />\n          </FormControl>\n        </Grid>\n        <Grid item xs={12}>\n          <FormControl fullWidth>\n            <TextField\n              type=\"password\"\n              label=\"Password\"\n              variant=\"outlined\"\n              onChange={e => setPassword(e.target.value)}\n            />\n          </FormControl>\n        </Grid>\n        <Grid item xs={12}>\n          <Button\n            type=\"submit\"\n            color=\"primary\"\n            size=\"large\"\n            variant=\"contained\"\n            fullWidth\n          >\n            Login\n          </Button>\n        </Grid>\n      </Grid>\n    </Container>\n  );\n};\n","import React from \"react\";\nimport { Link } from \"@reach/router\";\n\nimport { Login } from \"../components/Auth\";\n\nexport const LoginPage = () => {\n  return (\n    <div>\n      <Login />\n    </div>\n  );\n};\n","import React, { useState } from \"react\";\nimport { navigate } from \"@reach/router\";\nimport {\n  makeStyles,\n  Typography,\n  Paper,\n  Button,\n  ClickAwayListener\n} from \"@material-ui/core\";\n\nimport { useQuery, useMutation } from \"@apollo/react-hooks\";\nimport { NOTE_QUERY, DELETE_NOTE, NOTES_QUERY } from \"../gql\";\nimport { useToggle } from \"../utilities\";\nimport { EditNote } from \"../components/Notes\";\n\nconst useStyles = makeStyles(theme => ({\n  subheading: {\n    padding: theme.spacing(2),\n    marginTop: theme.spacing(2),\n    marginBottom: theme.spacing(2),\n    backgroundColor: theme.palette.primary.main\n  },\n  noteContainer: {\n    maxWidth: \"800px\",\n    marginLeft: \"auto\",\n    marginRight: \"auto\"\n  },\n  button: {\n    marginTop: theme.spacing(2),\n    marginBottom: theme.spacing(2)\n  }\n}));\n\nexport const NoteDetailPage = ({ noteId }) => {\n  const [currentId, setCurrentId] = useState(noteId);\n  const [deleteActive, setDeleteActive] = useState(false);\n\n  const { data, loading, error } = useQuery(NOTE_QUERY, {\n    variables: { id: currentId }\n  });\n\n  const [deleteNote, { error: deleteError }] = useMutation(DELETE_NOTE);\n\n  const { on: editOn, toggle: editToggle } = useToggle();\n\n  const ReactMarkdown = require(\"react-markdown\");\n  const classes = useStyles();\n\n  const handleDelete = e => {\n    e.preventDefault();\n    deleteNote({\n      variables: { id: currentId },\n      refetchQueries: [{ query: NOTES_QUERY }],\n      onCompleted: onDeleteCompleted()\n    });\n  };\n\n  const onDeleteCompleted = () => {\n    console.log(\"Delete Completed\");\n    navigate(\"/\");\n  };\n\n  return (\n    <>\n      {loading && <h1>Loading...</h1>}\n      {error && <h3>{error.message}</h3>}\n      {data && (\n        <>\n          <Typography variant=\"h3\" align=\"center\" gutterBottom>\n            {`${data.note.title}`}\n          </Typography>\n          {!editOn && (\n            <>\n              <Typography\n                className={classes.subheading}\n                variant=\"subtitle1\"\n                align=\"center\"\n              >\n                {data.note.summary}\n              </Typography>\n              <Paper className={classes.noteContainer} elevation={0}>\n                <ReactMarkdown source={data.note.bodyText} />\n                {!deleteActive && (\n                  <Button\n                    className={classes.button}\n                    size=\"large\"\n                    variant=\"outlined\"\n                    color=\"error\"\n                    onClick={() => setDeleteActive(true)}\n                  >\n                    Delete\n                  </Button>\n                )}\n                {deleteActive && (\n                  <ClickAwayListener onClickAway={() => setDeleteActive(false)}>\n                    <Button\n                      className={classes.button}\n                      size=\"large\"\n                      color=\"warning\"\n                      variant=\"contained\"\n                      onClick={e => handleDelete(e)}\n                    >\n                      Delete\n                    </Button>\n                  </ClickAwayListener>\n                )}\n                <Button\n                  className={classes.button}\n                  color=\"primary\"\n                  variant=\"outlined\"\n                  size=\"large\"\n                  onClick={editToggle}\n                >\n                  Edit\n                </Button>\n              </Paper>\n            </>\n          )}\n          {editOn && (\n            <>\n              <EditNote note={data.note} toggle={editToggle} />\n            </>\n          )}\n        </>\n      )}\n    </>\n  );\n};\n","import React, { useState } from \"react\";\n\nexport const useToggle = () => {\n  const [on, setOn] = useState(false);\n\n  const toggle = () => {\n    setOn(!on);\n  };\n  return { on, toggle };\n};\n","import React from \"react\";\n// import { ReactMarkdown } from \"react-markdown\";\n// import MarkdownTest from \"../markdown/test.md\";\nimport markdownTest from \"../markdown/test.md\";\n\nconst ReactMarkdown = require(\"react-markdown\");\n\nconst input = \"# This is a header \\n **Bold Text** \\n Normal text\";\n\nexport const MarkDown = () => {\n  return (\n    <div>\n      <ReactMarkdown source={input} />\n    </div>\n  );\n};\n"],"sourceRoot":""}